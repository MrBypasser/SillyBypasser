local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SillyBypasserGui"
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create the main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 400, 0, 250)
frame.Position = UDim2.new(0.5, -200, 0.5, -125)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Parent = screenGui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 10)
frameCorner.Parent = frame

-- Version label (Top Left)
local versionLabel = Instance.new("TextLabel")
versionLabel.Size = UDim2.new(0, 50, 0, 20)
versionLabel.Position = UDim2.new(0, 10, 0, 10)  -- Top left
versionLabel.BackgroundTransparency = 1
versionLabel.Text = "V.0.55"
versionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
versionLabel.TextSize = 14
versionLabel.Font = Enum.Font.Gotham
versionLabel.Parent = frame

-- Title label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -40, 0, 30)
titleLabel.Position = UDim2.new(0, 10, 0, 5)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Silly Bypasser"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 20
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Parent = frame

-- Input TextBox
local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(1, -20, 0, 50)
inputBox.Position = UDim2.new(0, 10, 0, 40)
inputBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
inputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
inputBox.PlaceholderText = "Type here..."
inputBox.Text = ""
inputBox.TextSize = 18
inputBox.Font = Enum.Font.Gotham
inputBox.Parent = frame

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 5)
inputCorner.Parent = inputBox

-- Converted TextBox (read-only)
local convertedBox = Instance.new("TextBox")
convertedBox.Size = UDim2.new(1, -20, 0, 50)
convertedBox.Position = UDim2.new(0, 10, 0, 100)
convertedBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
convertedBox.TextColor3 = Color3.fromRGB(255, 255, 255)
convertedBox.Text = ""
convertedBox.TextEditable = true
convertedBox.ClearTextOnFocus = false
convertedBox.TextSize = 18
convertedBox.Font = Enum.Font.Gotham
convertedBox.PlaceholderText = "Converted text will appear here..."
convertedBox.Parent = frame

local convertedCorner = Instance.new("UICorner")
convertedCorner.CornerRadius = UDim.new(0, 5)
convertedCorner.Parent = convertedBox

-- Reminder label
local reminderLabel = Instance.new("TextLabel")
reminderLabel.Size = UDim2.new(1, -20, 0, 40)
reminderLabel.Position = UDim2.new(0, 10, 1, -50)
reminderLabel.BackgroundTransparency = 1
reminderLabel.Text = "If you are getting tagged, say /e roblox in chat."
reminderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
reminderLabel.TextSize = 14
reminderLabel.Font = Enum.Font.Gotham
reminderLabel.TextWrapped = true
reminderLabel.Parent = frame

-- Small Caps Alphabet Conversion Map (includes both upper and lowercase)
local smallCapsAlphabet = {
    a = "ᴀ", b = "ʙ", c = "ᴄ", d = "ᴅ", e = "ᴇ", f = "ꜰ", g = "ɢ",
    h = "ʜ", i = "ɪ", j = "ᴊ", k = "ᴋ", l = "ʟ", m = "ᴍ", n = "ɴ",
    o = "ᴏ", p = "ᴘ", q = "Q", r = "ʀ", s = "ꜱ", t = "ᴛ", u = "ᴜ",
    v = "ᴠ", w = "ᴡ", x = "x", y = "ʏ", z = "ᴢ", 
    A = "ᴀ", B = "ʙ", C = "ᴄ", D = "ᴅ", E = "ᴇ", F = "ꜰ", G = "ɢ",
    H = "ʜ", I = "ɪ", J = "ᴊ", K = "ᴋ", L = "ʟ", M = "ᴍ", N = "ɴ",
    O = "ᴏ", P = "ᴘ", Q = "Q", R = "ʀ", S = "ꜱ", T = "ᴛ", U = "ᴜ",
    V = "ᴠ", W = "ᴡ", X = "x", Y = "ʏ", Z = "ᴢ"
}

-- Function to convert text to small caps alphabet
local function convertToSmallCaps(text)
    local result = ""
    for i = 1, #text do
        local char = text:sub(i, i)
        result = result .. (smallCapsAlphabet[char] or char)
    end
    return result
end

-- Update the convertedBox whenever input changes
inputBox.Changed:Connect(function(property)
    if property == "Text" then
        convertedBox.Text = convertToSmallCaps(inputBox.Text)
    end
end)

-- Notification about K to toggle GUI (at the top center)
local notificationLabel = Instance.new("TextLabel")
notificationLabel.Size = UDim2.new(0, 400, 0, 30)
notificationLabel.Position = UDim2.new(0.5, -200, 0, 10)  -- Centered at the top
notificationLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
notificationLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
notificationLabel.Text = "Use K to open and close the GUI"
notificationLabel.TextSize = 16
notificationLabel.Font = Enum.Font.Gotham
notificationLabel.TextWrapped = true
notificationLabel.Parent = screenGui

-- Hide notification after 10 seconds
wait(10)
notificationLabel:Destroy()

-- Key press detection for toggling the GUI (K to open/close)
local guiVisible = true
local UserInputService = game:GetService("UserInputService")
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.K then
        guiVisible = not guiVisible
        frame.Visible = guiVisible
    end
end)

-- Red X to close the GUI (Top Right)
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -40, 0, 10)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextSize = 18
closeButton.Font = Enum.Font.GothamBold
closeButton.Parent = frame

closeButton.MouseButton1Click:Connect(function()
    frame:Destroy()  -- Destroy the entire GUI when the button is clicked
end)

-- Draggable GUI Logic
local dragging, dragInput, dragStart, startPos

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end
end)

frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

frame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
-- This basically makes roblox unable to log your chat messages sent in-game. Meaning if you get reported for saying something bad, you won't get banned!
-- Store the loadstring (line 5) in your autoexec folder into a text/lua file to receive automatic updates [remove the "--"" part when you paste it into the text file]
-- Credits: AnthonyIsntHere

-- loadstring(game:HttpGet("https://raw.githubusercontent.com/AnthonyIsntHere/anthonysrepository/main/scripts/AntiChatLogger.lua", true))()

-- 4/1/2023 - Rewritten
-- 4/4/2023 - Fixed scrollbar visibility issue
-- 4/15/2023 - Fixed Adonis anti-cheat kicking issue
-- 4/26/2023 - Fixed tick loaded format
-- 4/28/2023 - Added support for Fluxus users (hookmetamethod issue seems to have gotten fixed)
-- 6/14/2023 - Added support for Evon users (checkcaller isuse)
-- 7/7/2023 - Added support for Valyse users "FLAG IS NOT EXIST" LMFAO
-- 7/22/2023 - Added global for universal scripts (mainly chat bypasses)
-- 8/24/2023 - Now supports Player.Chatted signal event for clientside (highly requested)
-- 8/25/2023 - Fully fixed (i was high when editing it yesterday sorry guys)
-- 9/1/2023 - Fixed issue with /e command not working sometimes (mainly when joining a game)

if not game:IsLoaded() then
    game.Loaded:wait()
end

task.wait(5)

local ACL_LoadTime = tick()
local NotificationTitle = "Anthony's ACL"

local OldCoreTypeSettings = {}
local WhitelistedCoreTypes = {
    "Chat",
    "All",
    Enum.CoreGuiType.Chat,
    Enum.CoreGuiType.All
}

local OldCoreSetting = nil

local CoreGui = game:GetService("CoreGui")
local StarterGui = game:GetService("StarterGui")
local TweenService = game:GetService("TweenService")
local TextChatService = game:GetService("TextChatService")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer

local Notify = function(_Title, _Text , Time)
    StarterGui:SetCore("SendNotification", {Title = _Title, Text = _Text, Icon = "rbxassetid://2541869220", Duration = Time})
end

local Tween = function(Object, Time, Style, Direction, Property)
    return TweenService:Create(Object, TweenInfo.new(Time, Enum.EasingStyle[Style], Enum.EasingDirection[Direction]), Property)
end

local PlayerGui = Player:FindFirstChildWhichIsA("PlayerGui") do
    if not PlayerGui then
        local Timer = tick() + 5
        repeat task.wait() until Player:FindFirstChildWhichIsA("PlayerGui") or (tick() > Timer)
        PlayerGui = Player:FindFirstChildWhichIsA("PlayerGui") or false
        if not PlayerGui then
            return Notify(NotificationTitle, "Failed to find PlayerGui!", 10)
        end
    end
end

if getgenv().AntiChatLogger then
    return Notify(NotificationTitle, "Anti Chat & Screenshot Logger already loaded!", 15)
else
    getgenv().AntiChatLogger = true
end

local Metatable = getrawmetatable(StarterGui)
setreadonly(Metatable, false)

local MessageEvent = Instance.new("BindableEvent")

if hookmetamethod then
    local CoreHook do
        CoreHook = hookmetamethod(StarterGui, "__namecall", newcclosure(function(self, ...)
            local Method = getnamecallmethod()
            local Arguments = {...}
            
            if self == StarterGui and not checkcaller() then
                if Method == "SetCoreGuiEnabled" then
                    local CoreType = Arguments[1]
                    local Enabled = Arguments[2]
                    
                    if table.find(WhitelistedCoreTypes, CoreType) and Enabled == false then -- Thanks Harun for correcting me on the second argument
                        OldCoreTypeSettings[CoreType] = Enabled
                        return
                    end
                elseif Method == "SetCore" then
                    local Core = Arguments[1]
                    local Connection = Arguments[2]
                    
                    if Core == "CoreGuiChatConnections" then
                        OldCoreSetting = Connection
                        return
                    end
                end
            end
            
            return CoreHook(self, ...)
        end))
    end

    if not getgenv().ChattedFix then
        getgenv().ChattedFix = true

        local ChattedFix do
            ChattedFix = hookmetamethod(Player, "__index", newcclosure(function(self, index)
                if self == Player and tostring(index):lower():match("chatted") and MessageEvent.Event then
                    return MessageEvent.Event
                end

                return ChattedFix(self, index)
            end))
        end

        local AnimateChattedFix = task.spawn(function()
            local ChattedSignal = false

            for _, x in next, getgc() do
                if type(x) == "function" and getfenv(x).script ~= nil and tostring(getfenv(x).script) == "Animate" then
                    if islclosure(x) then
                        local Constants = getconstants(x)

                        for _, v in next, Constants do
                            if v == "Chatted" then
                                ChattedSignal = x
                            end
                        end
                    end
                end
            end

            if ChattedSignal then
                ChattedSignal()
            end
        end)
    end
end

local EnabledChat = task.spawn(function()
    repeat
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
        task.wait()
    until StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.Chat)
end)

local WarningGuiThread = task.spawn(function()
    WarningUI = Instance.new("ScreenGui")
    Main = Instance.new("Frame")
    BackgroundHolder = Instance.new("Frame")
    Background = Instance.new("Frame")
    TopBar = Instance.new("Frame")
    UIGradient = Instance.new("UIGradient")
    TitleHolder = Instance.new("Frame")
    Title = Instance.new("TextLabel")
    Holder = Instance.new("Frame")
    UIListLayout = Instance.new("UIListLayout")
    Reason_1 = Instance.new("TextLabel")
    Reason_2 = Instance.new("TextLabel")
    Reason_3 = Instance.new("TextLabel")
    WarningText = Instance.new("TextLabel")
    Exit = Instance.new("TextButton")
    ImageLabel = Instance.new("ImageLabel")
    
    WarningUI.Enabled = false
    WarningUI.Name = "WarningUI"
    WarningUI.Parent = CoreGui
    
    Main.Name = "Main"
    Main.Parent = WarningUI
    Main.AnchorPoint = Vector2.new(.5, .5)
    Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Main.BackgroundTransparency = 1
    Main.Position = UDim2.new(.5, 0, .5, 0)
    Main.Size = UDim2.new(0, 400, 0, 400)
    
    BackgroundHolder.Name = "BackgroundHolder"
    BackgroundHolder.Parent = Main
    BackgroundHolder.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    BackgroundHolder.BackgroundTransparency = .25
    BackgroundHolder.BorderSizePixel = 0
    BackgroundHolder.Size = UDim2.new(1, 0, 1, 0)
    
    Background.Name = "Background"
    Background.Parent = BackgroundHolder
    Background.AnchorPoint = Vector2.new(.5, .5)
    Background.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Background.BorderSizePixel = 0
    Background.Position = UDim2.new(.5, 0, .5, 0)
    Background.Size = UDim2.new(.96, 0, .96, 0)
    
    TopBar.Name = "TopBar"
    TopBar.Parent = Background
    TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TopBar.BorderSizePixel = 0
    TopBar.Size = UDim2.new(1, 0, 0, 2)
    
    UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(53, 149, 146)), ColorSequenceKeypoint.new(.29, Color3.fromRGB(93, 86, 141)), ColorSequenceKeypoint.new(.50, Color3.fromRGB(126, 64, 138)), ColorSequenceKeypoint.new(.75, Color3.fromRGB(143, 112, 112)), ColorSequenceKeypoint.new(1, Color3.fromRGB(159, 159, 80))}
    UIGradient.Parent = TopBar
    
    TitleHolder.Name = "TitleHolder"
    TitleHolder.Parent = Background
    TitleHolder.AnchorPoint = Vector2.new(.5, .5)
    TitleHolder.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    TitleHolder.BorderColor3 = Color3.fromRGB(44, 44, 44)
    TitleHolder.BorderSizePixel = 2
    TitleHolder.Position = UDim2.new(.5, 0, .5, 0)
    TitleHolder.Size = UDim2.new(.9, 0, .9, 0)
    
    Title.Name = "Title"
    Title.Parent = TitleHolder
    Title.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Title.BorderSizePixel = 0
    Title.Position = UDim2.new(0, 15, 0, -12)
    Title.Size = UDim2.new(0, 75, 0, 20)
    Title.Font = Enum.Font.SourceSansBold
    Title.Text = "Warning"
    Title.TextColor3 = Color3.fromRGB(235, 235, 235)
    Title.TextScaled = true
    Title.TextWrapped = true
    
    Holder.Name = "Holder"
    Holder.Parent = TitleHolder
    Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Holder.BackgroundTransparency = 1
    Holder.Position = UDim2.new(0, 30, .125, 0)
    Holder.Size = UDim2.new(1, -30, .875, 0)
    
    UIListLayout.Parent = Holder
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
    Reason_1.Name = "Reason_1"
    Reason_1.Parent = Holder
    Reason_1.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Reason_1.BackgroundTransparency = 1
    Reason_1.BorderSizePixel = 0
    Reason_1.Size = UDim2.new(1, 0, 0, 20)
    Reason_1.Font = Enum.Font.SourceSans
    Reason_1.Text = "- TextChatService is enabled"
    Reason_1.TextColor3 = Color3.fromRGB(199, 40, 42)
    Reason_1.TextScaled = true
    Reason_1.TextWrapped = true
    Reason_1.TextXAlignment = Enum.TextXAlignment.Left
    Reason_1.Visible = false
    
    Reason_2.Name = "Reason_2"
    Reason_2.Parent = Holder
    Reason_2.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Reason_2.BackgroundTransparency = 1
    Reason_2.BorderSizePixel = 0
    Reason_2.Size = UDim2.new(1, 0, 0, 20)
    Reason_2.Font = Enum.Font.SourceSans
    Reason_2.Text = "- Legacy chat module was not found"
    Reason_2.TextColor3 = Color3.fromRGB(199, 40, 42)
    Reason_2.TextScaled = true
    Reason_2.TextWrapped = true
    Reason_2.TextXAlignment = Enum.TextXAlignment.Left
    Reason_2.Visible = false
    
    Reason_3.Name = "Reason_3"
    Reason_3.Parent = Holder
    Reason_3.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Reason_3.BackgroundTransparency = 1
    Reason_3.BorderSizePixel = 0
    Reason_3.Size = UDim2.new(1, 0, 0, 20)
    Reason_3.Font = Enum.Font.SourceSans
    Reason_3.Text = "- MessagePosted function was not found"
    Reason_3.TextColor3 = Color3.fromRGB(199, 40, 42)
    Reason_3.TextScaled = true
    Reason_3.TextWrapped = true
    Reason_3.TextXAlignment = Enum.TextXAlignment.Left
    Reason_3.Visible = false
    
    WarningText.Name = "WarningText"
    WarningText.Parent = TitleHolder
    WarningText.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    WarningText.BackgroundTransparency = 1
    WarningText.BorderSizePixel = 0
    WarningText.Position = UDim2.new(0, 30, .05, 0)
    WarningText.RichText = true
    WarningText.Size = UDim2.new(1, -30, 0, 20)
    WarningText.Font = Enum.Font.SourceSans
    WarningText.Text = "> Anti-<font color=\"#6ea644\">Chat Logger</font> will not work here!"
    WarningText.TextColor3 = Color3.fromRGB(255, 255, 255)
    WarningText.TextScaled = true
    WarningText.TextWrapped = true
    WarningText.TextXAlignment = Enum.TextXAlignment.Left
    
    Exit.Name = "Exit"
    Exit.Parent = TitleHolder
    Exit.AnchorPoint = Vector2.new(.5, .5)
    Exit.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    Exit.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Exit.Position = UDim2.new(.5, 0, .899999976, 0)
    Exit.Size = UDim2.new(0, 250, 0, 20)
    Exit.Font = Enum.Font.SourceSans
    Exit.Text = "Ok"
    Exit.TextColor3 = Color3.fromRGB(255, 255, 255)
    Exit.TextScaled = true
    Exit.TextWrapped = true
    
    ImageLabel.Parent = TitleHolder
    ImageLabel.AnchorPoint = Vector2.new(.5, .5)
    ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageLabel.BackgroundTransparency = 1
    ImageLabel.Position = UDim2.new(.5, 0, .6, 0)
    ImageLabel.Size = UDim2.new(.3, 0, .3, 0)
    ImageLabel.ZIndex = 1
    ImageLabel.Image = "rbxassetid://12969025384"
    ImageLabel.ImageColor3 = Color3.fromRGB(40, 40, 40)
    ImageLabel.ImageTransparency = .5
    
    Exit.MouseButton1Down:Connect(function()
        WarningUI:Destroy()
    end)
end)

if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
    WarningUI.Enabled = true
    Reason_1.Visible = true
    return
end

local PlayerScripts = Player:WaitForChild("PlayerScripts")
local ChatMain = PlayerScripts:FindFirstChild("ChatMain", true) or false

if not ChatMain then
    local Timer = tick()
    
    repeat task.wait() until PlayerScripts:FindFirstChild("ChatMain", true) or tick() > (Timer + 3)
    ChatMain = PlayerScripts:FindFirstChild("ChatMain", true)
    
    if not ChatMain then
        WarningUI.Enabled = true
        Reason_2.Visible = true
        return
    end
end

local PostMessage = require(ChatMain).MessagePosted

if not PostMessage then
    WarningUI.Enabled = true
    Reason_3.Visible = true
    return
end

local OldFunctionHook; OldFunctionHook = hookfunction(PostMessage.fire, function(self, Message)
    if self == PostMessage then
        MessageEvent:Fire(Message)
        return
    end
    return OldFunctionHook(self, Message)
end)

if setfflag then
    pcall(function()
        setfflag("AbuseReportScreenshot", "False")
        setfflag("AbuseReportScreenshotPercentage", "0")
    end)
end -- To prevent roblox from taking screenshots of your client.

local Credits = task.spawn(function()
    local UserIds = {
        1414978355
    }
    
    if table.find(UserIds, Player.UserId) then
        return
    end
    
    local Tag = Instance.new("BillboardGui")
    local Title = Instance.new("TextLabel", Tag)
    local Rank = Instance.new("TextLabel", Tag)
    local Gradient = Instance.new("UIGradient", Title)
    
    Tag.Brightness = 2
    Tag.Size = UDim2.new(4, 0, 1, 0)
    Tag.StudsOffsetWorldSpace = Vector3.new(0, 5, 0)
    
    Title.BackgroundTransparency = 1
    Title.Size = UDim2.new(1, 0, .6, 0)
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextScaled = true
    
    Rank.AnchorPoint = Vector2.new(.5, 0)
    Rank.BackgroundTransparency = 1
    Rank.Position = UDim2.new(.5, 0, .65, 0)
    Rank.Size = UDim2.new(.75, 0, .5, 0)
    Rank.TextColor3 = Color3.fromRGB(0, 0, 0)
    Rank.TextScaled = true
    Rank.Text = "< Anti Chat-Logger >"
    
    Gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(.75, .75, .75)),
        ColorSequenceKeypoint.new(.27, Color3.new(0, 0, 0)),
        ColorSequenceKeypoint.new(.5, Color3.new(.3, 0, .5)),
        ColorSequenceKeypoint.new(0.78, Color3.new(0, 0, 0)),
        ColorSequenceKeypoint.new(1, Color3.new(.75, .75, .75))
    })
    Gradient.Offset = Vector2.new(-1, 0)
    
    local GradientTeen = Tween(Gradient, 2, "Circular", "Out", {Offset = Vector2.new(1, 0)})
    
    function PlayAnimation()
    	GradientTeen:Play()
    	GradientTeen.Completed:Wait()
    	Gradient.Offset = Vector2.new(-1, 0)
    	task.wait(.75)
    	PlayAnimation()
    end
    
    local AddTitle = function(Character)
        repeat task.wait() until Character
        
        local Humanoid = Character and Character:WaitForChild("Humanoid")
        local RootPart = Humanoid and Humanoid.RootPart
        
        if Humanoid then
            Humanoid:GetPropertyChangedSignal("RootPart"):Connect(function()
                if Humanoid.RootPart then
                    Tag.Adornee = RootPart
                end
            end)
        end
        
        if RootPart then
            Tag.Adornee = RootPart
        end
    end
    
    task.spawn(PlayAnimation)
    
    for _, x in next, Players:GetPlayers() do
        if table.find(UserIds, x.UserId) then
            Tag.Parent = workspace.Terrain
            Title.Text = x.Name
            AddTitle(x.Character)
            x.CharacterAdded:Connect(AddTitle)
        end
    end
    
    Players.PlayerAdded:Connect(function(x)
        if table.find(UserIds, x.UserId) then
            Tag.Parent = workspace.Terrain
            Title.Text = x.Name
            x.CharacterAdded:Connect(AddTitle)
        end
    end)
    
    Players.PlayerRemoving:Connect(function(x)
        if table.find(UserIds, x.UserId) then
            Tag.Parent = game
        end
    end)
end)

task.delay(1, function() WarningUI:Destroy() end)

for _, x in next, OldCoreTypeSettings do
    if not x then
        StarterGui:SetCore("ChatActive", false)
    end
    StarterGui:SetCoreGuiEnabled(_, x)
end

if OldCoreSetting then
    StarterGui:SetCore("CoreGuiChatConnections", OldCoreSetting)
end

if StarterGui:GetCore("ChatActive") then
    StarterGui:SetCore("ChatActive", false)
    StarterGui:SetCore("ChatActive", true)
end

--Metatable.__namecall = CoreHook
if CoreHook then
    setmetatable(Metatable, {__namecall = CoreHook}) 
end
setreadonly(Metatable, true)

Notify(NotificationTitle, "Anti Chat & Screenshot Logger Loaded!", 15)
print(string.format("AnthonyIsntHere's Anti Chat-Logger has loaded in %s seconds.", string.format("%.2f", tostring(tick() - ACL_LoadTime))))
